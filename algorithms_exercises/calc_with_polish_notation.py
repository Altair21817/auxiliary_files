"""Необходимо написать калькулятор, работающий с польской (постфиксной)
нотацией. В ней операнды расположены перед знаками операций.

Например: '10 2 4 * -' означает '10 - 2 * 4' и равно 2:
1) знак * стоит сразу после чисел 2 и 4, значит к ним нужно применить операцию,
которую этот знак обозначает, то есть перемножить эти два числа. В результате
получим 8;
2) после этого выражение приобретёт вид: '10 8 -'. операцию «минус» нужно
применить к двум идущим перед ней числам, то есть 10 и 8. В итоге получаем 2.

В единственной строке дано выражение, записанное в обратной польской нотации.
Числа и арифметические операции записаны через пробел. На вход могут подаваться
операции: +, -, *, / и числа.
"""

"""Примеры с ответами для тестов со всеми условиями."""
INPUT_1: str = '7 2 + 4 * 2 +'  # 38
INPUT_2: str = '2 5 - 4 /'  # -1
INPUT_3: str = '-4 3 * 3 -5 - / -7 -1 - -8 -10 - + *'  # 8
INPUT_4: str = (
    '-7 -7 + 9 8 / / -2 1 - 7 3 / / - -5 -9 - 7 -7 - / 5 4 + -8 1 * + + - 4 -4'
    ' * 6 5 - / -7 -7 + 7 2 - + * 10 10 + -7 1 / + 10 -1 - -4 0 * - / - / 3 8 '
    '+ -2 6 + / 2 7 * -7 -9 - - / -7 2 / -6 -8 * / -7 2 / -6 -9 * * + * 8 1 / '
    '0 2 * * -5 6 / -4 1 / * / 4 -10 * -5 2 * - 2 2 / 3 4 + / - - + +')  # 29

INPUT: str = INPUT_1

OPERATIONS = {
        '+': lambda x, y: x + y,
        '-': lambda x, y: x - y,
        '*': lambda x, y: x * y,
        '/': lambda x, y: divmod(x, y)[0]}


def main():
    numbers: list = []
    expression: str = INPUT.split()
    for element in expression:
        if element in OPERATIONS:
            """Сначала определяем num_2, так как деление должно быть строго
            предпоследнего вводимого числа на последнее."""
            num_2 = numbers.pop()
            num_1 = numbers.pop()
            result = OPERATIONS[element](num_1, num_2)
            numbers.append(result)
        else:
            numbers.append(int(element))
    print(numbers[-1])


if __name__ == '__main__':
    main()
